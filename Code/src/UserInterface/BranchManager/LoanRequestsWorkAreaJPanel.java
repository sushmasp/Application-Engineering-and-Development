/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BranchManager;

import Business.Branch.Branch;
import Business.Department.Department;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LoanWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kurki
 */
public class LoanRequestsWorkAreaJPanel extends javax.swing.JPanel {

   private JPanel userProcessContainer;
   private Branch branch;
   private UserAccount userAccount;
    
    public LoanRequestsWorkAreaJPanel(JPanel userProcessContainer,Branch branch,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.branch = branch;
        this.userAccount = userAccount;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnOpenLoanRequests = new javax.swing.JButton();
        btnProcessedByHim = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLoanRequests = new javax.swing.JTable();
        btnViewDetails = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Loan Requests");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnOpenLoanRequests.setText("Open Loan Requests");
        btnOpenLoanRequests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenLoanRequestsActionPerformed(evt);
            }
        });

        btnProcessedByHim.setText("Loan Requests Processed By Him");
        btnProcessedByHim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessedByHimActionPerformed(evt);
            }
        });

        tblLoanRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loan Request ID", "Employee", "Customer", "Loan Amount", "Purpose", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLoanRequests);

        btnViewDetails.setText("View Loan Request Details >>");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnAssign.setText("Assign to Himself");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(btnOpenLoanRequests, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(btnProcessedByHim))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpenLoanRequests)
                    .addComponent(btnProcessedByHim))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(btnViewDetails))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
       int rowSelected = tblLoanRequests.getSelectedRow();

        if (rowSelected < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest w = (WorkRequest) tblLoanRequests.getValueAt(rowSelected, 0);
        
        if(w instanceof LoanWorkRequest)
        {
            ViewLoanDetailsJPanel viewLoanDetails = new ViewLoanDetailsJPanel(userProcessContainer,((LoanWorkRequest) w),branch,userAccount);
            userProcessContainer.add("ViewLoanDetailsJPanel",viewLoanDetails);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer); 
        
        }
        
        
       
        
        
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnOpenLoanRequestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenLoanRequestsActionPerformed
       
       populateOpenRequests();
       btnAssign.setEnabled(true);
       btnViewDetails.setEnabled(false);
    }//GEN-LAST:event_btnOpenLoanRequestsActionPerformed

    public void populateOpenRequests()
    {
        Department department =null;
        DefaultTableModel dtm = (DefaultTableModel) tblLoanRequests.getModel();
        dtm.setRowCount(0);
        if(!branch.getDepartmentDirectory().getDepartmentList().isEmpty())
        {
            for(Department dept:branch.getDepartmentDirectory().getDepartmentList())
            {
                if(dept.getDepartmentName().equals(Department.DepartmentType.LoanDepartment.getValue()))
                {
                    department = dept;
                }
            }
           if(department==null)
           {
               return;
           }
           else
           {
               if(!department.getWorkQueue().getWorkRequestList().isEmpty())
               {
                    for (WorkRequest w : department.getWorkQueue().getWorkRequestList())
                    {
                        if(w.getStatus().equals("Processed"))
                        {
                            if(w instanceof LoanWorkRequest)
                            {
                                if(((LoanWorkRequest) w).getIsUnderManager()==false)
                                {
                                    Object[] row = new Object[6];
                                    row[0]= w;
                                    row[1]= ((LoanWorkRequest) w).getEmployee();
                                    row[2]= ((LoanWorkRequest) w).getCustomer();
                                    row[3]= ((LoanWorkRequest) w).getCustomeRrequestedLoanAmount();
                                    row[4]= ((LoanWorkRequest) w).getPurpose();
                                    row[5]= w.getStatus();
                                    dtm.addRow(row);
                                }
                            }
                        }

                    }
                    
               }
           }
           
       
           
        }
        
        
    }
    
    private void btnProcessedByHimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessedByHimActionPerformed
       btnAssign.setEnabled(false);
       btnViewDetails.setEnabled(true);
       populateHisProcessedRequests();
    }//GEN-LAST:event_btnProcessedByHimActionPerformed

    public void populateHisProcessedRequests()
    {
         DefaultTableModel dtm = (DefaultTableModel) tblLoanRequests.getModel();
        dtm.setRowCount(0);
        
        if(!userAccount.getWorkQueue().getWorkRequestList().isEmpty())
       {
           for (WorkRequest w : userAccount.getWorkQueue().getWorkRequestList())
           {
               if(w instanceof LoanWorkRequest)
                            {
                                Object[] row = new Object[6];
                                row[0]= w;
                                row[1]= ((LoanWorkRequest) w).getEmployee();
                                row[2]= ((LoanWorkRequest) w).getCustomer();
                                row[3]= ((LoanWorkRequest) w).getCustomeRrequestedLoanAmount();
                                row[4]= ((LoanWorkRequest) w).getPurpose();
                                row[5]= w.getStatus();
                                dtm.addRow(row);
                            }
               
           }
           btnViewDetails.setEnabled(true);
       }
    }
    
    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        int rowSelected = tblLoanRequests.getSelectedRow();

        if (rowSelected < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        WorkRequest w = (WorkRequest) tblLoanRequests.getValueAt(rowSelected, 0);
        
        if(w instanceof LoanWorkRequest)
        {
            ((LoanWorkRequest) w).setIsUnderManager(Boolean.TRUE);
            userAccount.getWorkQueue().getWorkRequestList().add((LoanWorkRequest) w);
        }
        
        JOptionPane.showMessageDialog(null, "Work Request is assigned to oneself successfully.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
        
        populateOpenRequests();
        
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnOpenLoanRequests;
    private javax.swing.JButton btnProcessedByHim;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLoanRequests;
    // End of variables declaration//GEN-END:variables
}
