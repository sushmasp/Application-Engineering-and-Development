/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SecurityTier2Employee;

import Business.Branch.Branch;
import Business.Department.Department;
import Business.Employee.Employee;
import Business.Log;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SecurityWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kurki
 */
public class ViewRequestDetailsJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private SecurityWorkRequest securityWorkrequest;
    private Branch branch;
    private Department department;
    private UserAccount userAccount;
    private String name;
    private Boolean isLocked= false;
    private Boolean isUpdate = false;
    
    public ViewRequestDetailsJPanel(JPanel userProcessContainer,SecurityWorkRequest securityWorkRequest,Branch branch,Department department,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.securityWorkrequest = securityWorkRequest;
        this.branch = branch;
        this.department = department;
        this.userAccount = userAccount;
        
         btnSave.setEnabled(false);
        if(securityWorkRequest.getStatus().equals("Closed") || securityWorkRequest.getStatus().equals("Considered") || securityWorkRequest.getStatus().equals("Notify Manager"))
        {
            btnUpdate.setEnabled(false);
            isUpdate = false;
        }
        else
        {
            btnUpdate.setEnabled(true);
            isUpdate = true;
        }
        
        lbluser.setVisible(false);
        comboUser.setVisible(false);
        btnLock.setVisible(false);
        comboStatus.removeAllItems();
        comboStatus.addItem("Open");
        comboStatus.addItem("Notify Manager");
        comboStatus.addItem("Closed");
        comboStatus.addItem("Considered");
        
        txtID.setText(String.valueOf(securityWorkRequest.getSecurityWorkRequestID()));
        txtEmployee.setText(securityWorkRequest.getSender().getPerson().toString());
        if(securityWorkRequest.getMessage()==null)
        {
            txtMessage.setText("");
        }
        else
        {
        txtMessage.setText(String.valueOf(securityWorkRequest.getMessage()));
        }
        
        txtRequestedDate.setText(String.valueOf(securityWorkRequest.getRequestDate()));
        if(securityWorkRequest.getResolveDate()==null)
        {
            txtResolvedDate.setText("");
        }
        else
        {
        txtResolvedDate.setText(String.valueOf(securityWorkRequest.getResolveDate()));
        }
        comboStatus.setSelectedItem(securityWorkRequest.getStatus());
        txtSuggestions.setText(securityWorkRequest.getSuggestions());
        
        btnSave.setEnabled(false);
        txtMessage.setEnabled(false);
        comboStatus.setEnabled(false);
        txtEmployee.setEnabled(false);
        txtEmployee.setEnabled(false);
        txtID.setEnabled(false);
        txtMessage.setEnabled(false);
        txtSuggestions.setEnabled(false);
        txtRequestedDate.setEnabled(false);
        txtResolvedDate.setEnabled(false);
        
        populatTable();
        
    }
    
    public void populatTable()
    {

        DefaultTableModel dtm = (DefaultTableModel) tblDetails.getModel();
        dtm.setRowCount(0);
          
            for (Log log : (securityWorkrequest.getLogDirectory().getLogList()))
            {
                    Object[] row = new Object[5];
                    row[0]= log;
                    row[1] =log.getRole();
                    row[2] =log.getIPAddress();
                    row[3] =log.getTime();
                    row[4] =log.getMessage();
                    dtm.addRow(row);
            }
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtMessage = new javax.swing.JTextField();
        txtEmployee = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRequestedDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtResolvedDate = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtSuggestions = new javax.swing.JTextField();
        lbluser = new javax.swing.JLabel();
        comboUser = new javax.swing.JComboBox();
        btnLock = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 460, -1, -1));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 460, -1, -1));
        add(txtMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 53, 242, -1));
        add(txtEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 84, 244, -1));
        add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 53, 244, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("View Security Request Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 19, 236, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 492, -1, -1));

        jLabel2.setText("Security Request ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 56, 126, -1));

        jLabel3.setText("Employee Requested");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 87, 120, -1));

        jLabel5.setText("Message");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 56, 116, -1));
        add(txtRequestedDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(159, 115, 242, -1));

        jLabel6.setText("Status");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 87, 116, -1));

        jLabel7.setText("Requested Date");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 118, 116, -1));

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStatusActionPerformed(evt);
            }
        });
        add(comboStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 84, 244, -1));

        jLabel8.setText("Resolved  Date");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 149, 116, -1));
        add(txtResolvedDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(159, 146, 242, -1));

        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role", "IP Address", "Time", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDetails);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 211, 816, 177));

        jLabel4.setText("Suggested Solutions");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 118, 129, -1));
        add(txtSuggestions, new org.netbeans.lib.awtextra.AbsoluteConstraints(547, 115, 296, -1));

        lbluser.setText("User");
        add(lbluser, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 80, -1));

        comboUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 210, -1));

        btnLock.setText("Lock the Account");
        btnLock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLockActionPerformed(evt);
            }
        });
        add(btnLock, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, 190, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        btnSave.setEnabled(true);
        txtMessage.setEnabled(true);
        txtSuggestions.setEnabled(true);
        comboStatus.setEnabled(true);
        comboStatus.removeAllItems();
        comboStatus.addItem("Closed");
        comboStatus.addItem("Notify Manager");
        btnUpdate.setEnabled(false);
        isUpdate = false;
       
        lbluser.setVisible(true);
        comboUser.setVisible(true);
        btnLock.setVisible(true);
        comboUser.removeAllItems();
        for(Department d: branch.getDepartmentDirectory().getDepartmentList())
                {
                    for (UserAccount ua:d.getUserAccountDirectory().getUserAccountList())
                    {
                        comboUser.addItem(ua);
                    }
                }
        for(UserAccount u : branch.getUserAccountDirectory().getUserAccountList())
                {
                        comboUser.addItem(u); 
                }

        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy  HH:mm:ss"); 
        String ts=sdf.format(cal.getTime());
        
        txtResolvedDate.setText(ts);
        txtResolvedDate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private Boolean lockUserAccount()
    {
        // Considered as a threat and User should unlock the account and change the password
      
                
                isLocked =  true;
             
             
           
        return isLocked;
       
    }
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy  HH:mm:ss"); 
        String ts=sdf.format(cal.getTime());

        // To check for mandatory fields

        if(comboStatus.getSelectedItem().equals("Notify Manager"))
        {
            if(txtSuggestions.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Suggestions are mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
                return;
            }
            
        }
        
        if(comboStatus.getSelectedItem().equals("Notify Manager"))
        {
          if(isLocked==false)
          {
            JOptionPane.showMessageDialog(null,"Locking the User Account are mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;  
          }
        }
        
        //Locking
        if(isLocked==true)
        {
          UserAccount selectedUA = (UserAccount)comboUser.getSelectedItem();
          selectedUA.setIsLocked(Boolean.TRUE);
          JOptionPane.showMessageDialog(null,"User Account is locked.","WARNING",JOptionPane.WARNING_MESSAGE);  
        }
        
        
        // Setting the status of security request in the work queue of officer requested
        Employee emp =(Employee)securityWorkrequest.getSender().getPerson();
       
        for(UserAccount ua:branch.getUserAccountDirectory().getUserAccountList())
        {
            if(ua.getPerson()==emp)
            {
                for(WorkRequest w : ua.getWorkQueue().getWorkRequestList())
                {
                    if(w instanceof SecurityWorkRequest)
                    {
                        if(w==securityWorkrequest)
                        {
                            w.setStatus((String)comboStatus.getSelectedItem());
                            ((SecurityWorkRequest) w).setSuggestions(txtSuggestions.getText().trim());
                            w.setResolveDate(ts);
                            w.setMessage(txtMessage.getText().trim());
                        }
                    }
                }
            }
        }

        // Setting the status of security request in the work queue of  himself

        for(WorkRequest w : userAccount.getWorkQueue().getWorkRequestList())
        {
            if(w instanceof SecurityWorkRequest)
            {
                if(w==securityWorkrequest)
                {
                    w.setStatus((String)comboStatus.getSelectedItem());
                    ((SecurityWorkRequest) w).setSuggestions(txtSuggestions.getText().trim());
                    w.setResolveDate(ts);
                    w.setMessage(txtMessage.getText().trim());
                }
            }
        }

           // Setting the status in Branch's Loan Department's WorkQueue 
         for(Department d:branch.getDepartmentDirectory().getDepartmentList())
         {
             if(d.getDepartmentName().equals(Department.DepartmentType.LoanDepartment.getValue()))
             {
                 for(WorkRequest w :d.getWorkQueue().getWorkRequestList())
                 {
                     if(w instanceof SecurityWorkRequest)
                        {
                            if(w==securityWorkrequest)
                            {
                                w.setStatus((String)comboStatus.getSelectedItem());
                                ((SecurityWorkRequest) w).setSuggestions(txtSuggestions.getText().trim());
                                 w.setResolveDate(ts);
                                 w.setMessage(txtMessage.getText().trim());
                            }
                        }
                 }
                 
             }
         }
        JOptionPane.showMessageDialog(null, "Security Request is updated successfully.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);

        btnSave.setEnabled(false);
        txtMessage.setEnabled(false);
        txtSuggestions.setEnabled(false);
        comboStatus.setEnabled(false);
        btnUpdate.setEnabled(false);
        isUpdate =false;
        lbluser.setVisible(false);
        comboUser.setVisible(false);
        btnLock.setVisible(false);
        comboStatus.removeAllItems();
        lbluser.setVisible(false);
        comboUser.setVisible(false);
        btnLock.setVisible(false);
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ProcessedByHimJPanel requestsByHim = (ProcessedByHimJPanel) component;
        requestsByHim.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void comboStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStatusActionPerformed
       
        
    }//GEN-LAST:event_comboStatusActionPerformed

    private void btnLockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLockActionPerformed
        lockUserAccount();
    }//GEN-LAST:event_btnLockActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLock;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JComboBox comboUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbluser;
    private javax.swing.JTable tblDetails;
    private javax.swing.JTextField txtEmployee;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtRequestedDate;
    private javax.swing.JTextField txtResolvedDate;
    private javax.swing.JTextField txtSuggestions;
    // End of variables declaration//GEN-END:variables
}
