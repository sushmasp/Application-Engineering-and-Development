/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterfcae.BankAdmin;

import Business.Account.Account;
import Business.Biller.Biller;
import Business.Branch.Branch;
import Business.Business;
import Business.Demographics.Address;
import Business.Department.Department;
import Business.Region.Region;
import Business.Role.BillerRole;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author kurki
 */
public class NewBillerJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Business business;
    
    public NewBillerJPanel(JPanel userProcessContainer,Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        
        chkCheckingAccount.setSelected(true);
        chkSavingsAccount.setSelected(true);
        
        chkCheckingAccount.setEnabled(false);
        chkSavingsAccount.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtBillerName = new javax.swing.JTextField();
        txtAddressLine2 = new javax.swing.JTextField();
        txtAddressLine1 = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtState = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        txtZipCode = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        chkCheckingAccount = new javax.swing.JCheckBox();
        chkSavingsAccount = new javax.swing.JCheckBox();
        jLabel18 = new javax.swing.JLabel();
        txtEmailAddress = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText(" New Biller");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setText("Biller Name ");

        jLabel3.setText("Address Line 1 ");

        jLabel4.setText("Address Line 2 ");

        jLabel5.setText("City ");

        jLabel6.setText("State");

        jLabel7.setText("Zip Code ");

        jLabel8.setText("Country ");

        jLabel9.setText("Phone Number ");

        jLabel10.setText("Email Address ");

        txtAddressLine2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressLine2ActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel16.setText("Username");

        jLabel17.setText("Password");

        chkCheckingAccount.setText("Checking Account");
        chkCheckingAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCheckingAccountActionPerformed(evt);
            }
        });

        chkSavingsAccount.setText("Savings Account");

        jLabel18.setText("Accounts");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtAddressLine1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtBillerName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtAddressLine2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtState, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtCountry, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtZipCode, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtEmailAddress))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkCheckingAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkSavingsAccount))))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBillerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(chkCheckingAccount)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSavingsAccount))))
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(70, 70, 70))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtAddressLine2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressLine2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressLine2ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
      int zipCode =0;
      int phoneNumber=0;
      String username = txtUsername.getText().trim();
      String password = String.valueOf(txtPassword.getPassword());

        // To check for mandatory fields
       
        if (txtAddressLine1.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Address Line 1 is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        if (txtCity.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"City is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        if (txtState.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"State is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        if (txtCountry.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Country is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        if (txtZipCode.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Zip Code is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        if (txtPhoneNumber.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Phone Number is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        if (txtEmailAddress.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Email Address is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        
         if (txtUsername.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Username is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        if (password.equals(""))
        {
           JOptionPane.showMessageDialog(null,"Password is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
       
        // To check for numeric values
       
        try
        {
           zipCode = Integer.parseInt(txtZipCode.getText().trim());
        }
        catch(NumberFormatException e)
        {
           JOptionPane.showMessageDialog(null,"Zip Code can only be a numeric value.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }  
         try
        {
           phoneNumber = Integer.parseInt(txtPhoneNumber.getText().trim());
        }
        catch(NumberFormatException e)
        {
           JOptionPane.showMessageDialog(null,"Phone Number can have only numerals.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }  
         
        String PasswordPattern="((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,10})";
        Pattern pattern = Pattern.compile(PasswordPattern);
        Matcher matcher = pattern.matcher(password);
	if(matcher.matches()==false)
        {
          JOptionPane.showMessageDialog(null,"Please enter a Strong Password(1 numeral,1 lowerCase,1 UpperCase, 1 SpecialCharacter([@#$%]).","WARNING",JOptionPane.WARNING_MESSAGE);
          return;  
        }
         
       /*  
        // To check whether accounts have selected for creation
        
       
        if((!chkCheckingAccount.isSelected()))
        {
          JOptionPane.showMessageDialog(null,"Checking account creation is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
          return;  
        }
        
         if((!chkSavingsAccount.isSelected()) )
        {
          JOptionPane.showMessageDialog(null,"Savings account creation is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
          return;  
        }
        */
         // To check whether username is unique
         Boolean isPresent = false;
              if(!(business.getUserAccountDirectory().getUserAccountList().isEmpty()))
            {
              isPresent = business.getUserAccountDirectory().checkIfUsernameIsUnique(username);
              if(isPresent==false)
              {
                for(Region r: business.getRegionDirectory().getRegionList())
                    {
                        isPresent=r.getUserAccountDirectory().checkIfUsernameIsUnique(username);
                        if(isPresent==false)
                        {
                            for(Branch b: r.getBranchDirectory().getBranchList())
                            {
                                isPresent = b.getUserAccountDirectory().checkIfUsernameIsUnique(username);
                                if(isPresent == false)
                                {
                                    for(Department d: b.getDepartmentDirectory().getDepartmentList())
                                    {
                                        isPresent = d.getUserAccountDirectory().checkIfUsernameIsUnique(username);
                                        if(isPresent==true)
                                        {
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }  
              }
              
            }
         if (isPresent==true)
         {
            JOptionPane.showMessageDialog(null,"Given Username already exists in the system.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;  
         }
         
         
        Biller biller =  business.getBillerDirectory().addBiller();
         
        biller.setName(txtBillerName.getText().trim());
        biller.setEmailAddress(txtEmailAddress.getText().trim());
        biller.setPhoneNumber(txtPhoneNumber.getText().trim());
        Address address = biller.getAddress();
        address.setAddressLine1(txtAddressLine1.getText().trim());
        address.setAddressLine2(txtAddressLine2.getText().trim());
        address.setCity(txtCity.getText().trim());
        address.setState(txtState.getText().trim());
        address.setCountry(txtCountry.getText().trim());
        address.setZipCode(Integer.parseInt(txtZipCode.getText().trim()));
        
       // Creating UserAccount
     
         business.getUserAccountDirectory().createUserAccount(txtUsername.getText().trim(), password,biller,new BillerRole());
     
       
        
       // Creating Bank Accounts
       
       if (chkCheckingAccount.isSelected())
       {
           biller.getAccountDirectory().createAccount(Account.AccountType.CheckingAccount);
       }
       
       
       if (chkSavingsAccount.isSelected())
       {
           biller.getAccountDirectory().createAccount(Account.AccountType.SavingsAccount);
       }
       
        JOptionPane.showMessageDialog(null, "Biller is added successfully.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
		
        txtBillerName.setText("");
        txtAddressLine1.setText("");
        txtAddressLine2.setText("");
        txtCity.setText("");
        txtCountry.setText("");
        txtEmailAddress.setText("");
        txtPassword.setText("");
        txtPhoneNumber.setText("");
        txtState.setText("");
        txtZipCode.setText("");
        txtUsername.setText("");
        chkCheckingAccount.setSelected(true);
        chkSavingsAccount.setSelected(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void chkCheckingAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCheckingAccountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkCheckingAccountActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageBillersJPanel manageBillers = (ManageBillersJPanel) component;
        manageBillers.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox chkCheckingAccount;
    private javax.swing.JCheckBox chkSavingsAccount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtAddressLine2;
    private javax.swing.JTextField txtBillerName;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
