/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RegionalManager;

import Business.Branch.Branch;
import Business.Business;
import Business.Employee.Employee;
import Business.Region.Region;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kurki
 */
public class ManageBranchesJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Region region;
    private Business business;
    
    public ManageBranchesJPanel(JPanel userProcessContainer,Region region,Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.region =region;
        this.business = business;
        populateTable();
    }

    public void populateTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) tblBranches.getModel();
        dtm.setRowCount(0);
        
        if(!(region.getBranchDirectory().getBranchList().isEmpty()))
        {
            for(Branch branch : region.getBranchDirectory().getBranchList())
            {
                Object[] row = new Object[2];
                row[0]= branch;
                
                ArrayList<Employee> employees = new ArrayList<Employee>();
                employees = branch.getEmployeeDirectory().getEmployeeList();
                if(employees.isEmpty())
                {
                    row[1]="";
                }
                else
                {
                    for(Employee e: employees)
                    {
                            row[1] = e;
                    }
                }
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdateBranch = new javax.swing.JButton();
        btnNewBranch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBranches = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnRemoveBranch = new javax.swing.JButton();

        btnUpdateBranch.setText("Update Branch >>");
        btnUpdateBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBranchActionPerformed(evt);
            }
        });

        btnNewBranch.setText("Create New Branch >>");
        btnNewBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewBranchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Manage Branches");

        tblBranches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Branch Name", "Branch Manager"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBranches);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRemoveBranch.setText("Delete Branch");
        btnRemoveBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveBranchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdateBranch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRemoveBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(btnNewBranch))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveBranch)
                    .addComponent(btnUpdateBranch)
                    .addComponent(btnNewBranch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(59, 59, 59))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBranchActionPerformed
        int rowSelected = tblBranches.getSelectedRow();

        if (rowSelected < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a branch.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;
        }

        Branch branch = (Branch)tblBranches.getValueAt(rowSelected,0);

        Employee emp = (Employee)tblBranches.getValueAt(rowSelected, 1);
        UpdateBranchJPanel updateRegion = new UpdateBranchJPanel(userProcessContainer,region,branch,emp);
        userProcessContainer.add("UpdateBranchJPanel",updateRegion);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnUpdateBranchActionPerformed

    private void btnNewBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewBranchActionPerformed
        NewBranchJPanel newBranch = new NewBranchJPanel(userProcessContainer,region,business);
        userProcessContainer.add("NewBranchJPanel",newBranch);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnNewBranchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRemoveBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveBranchActionPerformed
        int rowSelected = tblBranches.getSelectedRow();

        if (rowSelected < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a branch.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;
        }

        Branch branch = (Branch)tblBranches.getValueAt(rowSelected, 0);
        region.getBranchDirectory().deleteBranch(branch);

        JOptionPane.showMessageDialog(null, "Branch is deleted successfully.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);

        populateTable();
        
    }//GEN-LAST:event_btnRemoveBranchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnNewBranch;
    private javax.swing.JButton btnRemoveBranch;
    private javax.swing.JButton btnUpdateBranch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBranches;
    // End of variables declaration//GEN-END:variables
}
