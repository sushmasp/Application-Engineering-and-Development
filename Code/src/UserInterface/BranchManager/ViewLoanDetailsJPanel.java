/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BranchManager;

import Business.Branch.Branch;
import Business.Customer.Customer;
import Business.Department.Department;
import Business.Employee.Employee;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LoanWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author kurki
 */
public class ViewLoanDetailsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private LoanWorkRequest loanWorkrequest;
    private Branch branch;
    private UserAccount userAccount;
    
    public ViewLoanDetailsJPanel(JPanel userProcessContainer,LoanWorkRequest loanWorkrequest,Branch branch,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.loanWorkrequest = loanWorkrequest;
        this.branch = branch;
        this.userAccount = userAccount;
        
        btnSave.setEnabled(false);
        if(loanWorkrequest.getStatus().equals("Approved") || loanWorkrequest.getStatus().equals("Declined"))
        {
            btnUpdate.setEnabled(false);
        }
        else
        {
            btnUpdate.setEnabled(true);
        }
        
        comboStatus.removeAllItems();
        comboStatus.addItem("Processed");
        comboStatus.addItem("Approved");
        comboStatus.addItem("Rejected");
        comboStatus.addItem("Accepted");
        comboStatus.addItem("Declined");
        
        txtID.setText(String.valueOf(loanWorkrequest.getLoanWorkRequestID()));
        txtCustomer.setText(loanWorkrequest.getCustomer().toString());
        txtEmployee.setText(loanWorkrequest.getEmployee().toString());
        txtApprovedAmount.setText(String.valueOf(loanWorkrequest.getApprovedLoanAmount()));
        txtCustomerRequestedAmount.setText(String.valueOf(loanWorkrequest.getCustomeRrequestedLoanAmount()));
        txtEmployeeSuggestedAmount.setText(String.valueOf(loanWorkrequest.getEmployeeSuggestedLoanAmount()));
        txtLoanInterestRate.setText(String.valueOf(loanWorkrequest.getInterestRate()));
        txtMessage.setText(String.valueOf(loanWorkrequest.getMessage()));
        txtPurpose.setText(String.valueOf(loanWorkrequest.getPurpose()));
        txtRequestedDate.setText(String.valueOf(loanWorkrequest.getRequestDate()));
        txtResolvedDate.setText(String.valueOf(loanWorkrequest.getResolveDate()));
        comboStatus.setSelectedItem(loanWorkrequest.getStatus());
        
        btnSave.setEnabled(false);
        txtMessage.setEnabled(false);
        txtApprovedAmount.setEnabled(false);
        txtLoanInterestRate.setEnabled(false);
        txtResolvedDate.setEnabled(false);
        comboStatus.setEnabled(false);
        txtCustomer.setEnabled(false);
        txtEmployee.setEnabled(false);
        txtCustomerRequestedAmount.setEnabled(false);
        txtID.setEnabled(false);
        txtMessage.setEnabled(false);
        txtPurpose.setEnabled(false);
        txtRequestedDate.setEnabled(false);
        txtEmployeeSuggestedAmount.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        txtMessage = new javax.swing.JTextField();
        txtEmployee = new javax.swing.JTextField();
        txtPurpose = new javax.swing.JTextField();
        txtEmployeeSuggestedAmount = new javax.swing.JTextField();
        txtCustomerRequestedAmount = new javax.swing.JTextField();
        txtLoanInterestRate = new javax.swing.JTextField();
        txtApprovedAmount = new javax.swing.JTextField();
        txtRequestedDate = new javax.swing.JTextField();
        txtResolvedDate = new javax.swing.JTextField();
        comboStatus = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("View Loan Details");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setText("Loan Request ID");

        jLabel3.setText("Customer Requested");

        jLabel4.setText("Employee Processed");

        jLabel5.setText("Message");

        jLabel6.setText("Status");

        jLabel7.setText("Requested Date");

        jLabel8.setText("Resolved Date");

        jLabel9.setText("Purpose of Loan");

        jLabel10.setText("Customer Requested Amount ");

        jLabel11.setText("Employee Suggested Amount");

        jLabel12.setText("Loan Interest Rate");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel14.setText("Approved Amount");

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCustomerRequestedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(71, 71, 71))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCustomer)
                                    .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                                    .addComponent(txtEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                                    .addComponent(txtMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                                    .addComponent(txtPurpose, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                                    .addComponent(comboStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtApprovedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmployeeSuggestedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtResolvedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRequestedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLoanInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(btnUpdate)
                        .addGap(37, 37, 37)
                        .addComponent(btnSave)))
                .addGap(22, 93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPurpose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCustomerRequestedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtEmployeeSuggestedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtApprovedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtLoanInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtRequestedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtResolvedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        LoanRequestsWorkAreaJPanel loanRequests = (LoanRequestsWorkAreaJPanel) component;
        loanRequests.populateOpenRequests();
        loanRequests.populateHisProcessedRequests();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        btnSave.setEnabled(true);
        txtMessage.setEnabled(true);
        txtApprovedAmount.setEnabled(true);
        txtLoanInterestRate.setEnabled(true);
        txtResolvedDate.setEnabled(true);
        comboStatus.setEnabled(true);
        comboStatus.removeAllItems();
        comboStatus.addItem("Approved");
        comboStatus.addItem("Rejected");
        
      Calendar cal = Calendar.getInstance();
      SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy  HH:mm:ss"); 
      String ts=sdf.format(cal.getTime());
      txtResolvedDate.setText(ts);
      btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       
        double interestrate =0;
        double approvedAmount = 0;
         // To check for mandatory fields
         
        if(comboStatus.getSelectedItem()=="Approved")
        {
        if (txtApprovedAmount.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Approved Amount is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
       
        
        if (txtLoanInterestRate.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Loan Interest Rate is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
        }
        
        if(comboStatus.getSelectedItem().equals("Processed"))
        {
           JOptionPane.showMessageDialog(null,"Status cannot be in Processed state.","WARNING",JOptionPane.WARNING_MESSAGE);
           return; 
        }
        
         // Code to validate  numeric value
     if(comboStatus.getSelectedItem().equals("Approved"))
        {
        try
        {
           interestrate = Double.parseDouble(txtLoanInterestRate.getText().trim());
        }
        catch(NumberFormatException e)
        {
           JOptionPane.showMessageDialog(null,"Loan Interest Rate can only be a numeric value.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }   
        
        
        try
        {
           approvedAmount = Double.parseDouble(txtApprovedAmount.getText().trim());
        }
        catch(NumberFormatException e)
        {
           JOptionPane.showMessageDialog(null,"Approved Amount can only be a numeric value.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }   
       }
     
     if(approvedAmount<=0.0)
        {
            JOptionPane.showMessageDialog(null,"Approved Amount cannot be zero or lesser.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;
        }
     
      if(approvedAmount>Double.parseDouble(txtCustomerRequestedAmount.getText().trim()))
        {
            JOptionPane.showMessageDialog(null,"Approved Amount cannot be greater than Customer Requested Amount.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;
        }
      
       if (interestrate<=0)
        {
            JOptionPane.showMessageDialog(null,"Interest Rate cannot be zero or lesser.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;
        }
      
        if (interestrate>50)
        {
            JOptionPane.showMessageDialog(null,"Interest Rate cannot be greater than 50%.","WARNING",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
       
        
        // Setting the status of loan request in the work queue of customer requested
        Customer cus = loanWorkrequest.getCustomer();
       if(comboStatus.getSelectedItem().equals("Approved"))
        {
            Double availableBalance = cus.getMaxLoanAmountBalanceAvailable();
            cus.setMaxLoanAmountBalanceAvailable(availableBalance - approvedAmount);
        }
        for(UserAccount ua:branch.getUserAccountDirectory().getUserAccountList())
        {
             if(ua.getPerson()==cus)
            {
                for(WorkRequest w : ua.getWorkQueue().getWorkRequestList())
                {
                    if(w instanceof LoanWorkRequest)
                    {
                        if(w==loanWorkrequest)
                        {
                            if(comboStatus.getSelectedItem().equals("Approved"))
                            {
                                ((LoanWorkRequest) w).setApprovedLoanAmount(approvedAmount);
                            }
                            else if(comboStatus.getSelectedItem().equals("Rejected"))
                            {
                                ((LoanWorkRequest) w).setApprovedLoanAmount(0);
                            }
                                
                                ((LoanWorkRequest) w).setInterestRate(interestrate);
                                w.setMessage(txtMessage.getText().trim());
                                w.setResolveDate(txtResolvedDate.getText().trim());
                                w.setStatus((String)comboStatus.getSelectedItem());
                        }
                    }
                }
            }
        }
         // Setting the status of loan request in the work queue of employee processed
        Employee emp =loanWorkrequest.getEmployee();
        for(Department dept:branch.getDepartmentDirectory().getDepartmentList())
        {
            for(UserAccount ua:dept.getUserAccountDirectory().getUserAccountList())
            {
                if(ua.getPerson()==emp)
                {
                    for(WorkRequest w : ua.getWorkQueue().getWorkRequestList())
                    {
                        if(w instanceof LoanWorkRequest)
                        {
                            if(w==loanWorkrequest)
                            {
                                if(comboStatus.getSelectedItem().equals("Approved"))
                                    {
                                        ((LoanWorkRequest) w).setApprovedLoanAmount(approvedAmount);
                                    }
                                else if(comboStatus.getSelectedItem().equals("Rejected"))
                                    {
                                        ((LoanWorkRequest) w).setApprovedLoanAmount(0);
                                    }
                                ((LoanWorkRequest) w).setInterestRate(interestrate);
                                w.setMessage(txtMessage.getText().trim());
                                w.setResolveDate(txtResolvedDate.getText().trim());
                                w.setStatus((String)comboStatus.getSelectedItem());
                            }
                        }
                    }
                }
            }
        }
        //// Setting the status of loan request in the work queue of him         
     
                    for(WorkRequest w : userAccount.getWorkQueue().getWorkRequestList())
                    {
                        if(w instanceof LoanWorkRequest)
                        {
                            if(w==loanWorkrequest)
                            {
                                if(comboStatus.getSelectedItem().equals("Approved"))
                                    {
                                        ((LoanWorkRequest) w).setApprovedLoanAmount(approvedAmount);
                                    }
                                else if(comboStatus.getSelectedItem().equals("Rejected"))
                                    {
                                        ((LoanWorkRequest) w).setApprovedLoanAmount(0);
                                    }
                                ((LoanWorkRequest) w).setInterestRate(interestrate);
                                w.setMessage(txtMessage.getText().trim());
                                w.setResolveDate(txtResolvedDate.getText().trim());
                                w.setStatus((String)comboStatus.getSelectedItem());
                            }
                        }
                    }
  
        loanWorkrequest.setResolveDate(txtResolvedDate.getText().trim());
        
        JOptionPane.showMessageDialog(null, "Loan Request is updated successfully.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
        
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(false);
        txtMessage.setEnabled(false);
        txtApprovedAmount.setEnabled(false);
        txtLoanInterestRate.setEnabled(false);
        txtResolvedDate.setEnabled(false);
        comboStatus.setEnabled(false);
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtApprovedAmount;
    private javax.swing.JTextField txtCustomer;
    private javax.swing.JTextField txtCustomerRequestedAmount;
    private javax.swing.JTextField txtEmployee;
    private javax.swing.JTextField txtEmployeeSuggestedAmount;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLoanInterestRate;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtPurpose;
    private javax.swing.JTextField txtRequestedDate;
    private javax.swing.JTextField txtResolvedDate;
    // End of variables declaration//GEN-END:variables
}
