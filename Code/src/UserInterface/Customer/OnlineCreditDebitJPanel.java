/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Account.Account;
import Business.Biller.Biller;
import Business.Branch.Branch;
import Business.Business;
import Business.Customer.Customer;
import Business.Region.Region;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author kurki
 */
public class OnlineCreditDebitJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Branch branch;
    private UserAccount userAccount;
    private Business business;
    private Customer fromCustomer;
    private ArrayList<Account> accountList;
    private Boolean isBetweenMyAccounts =false;
    
    public OnlineCreditDebitJPanel(JPanel userProcessContainer,Branch branch,UserAccount userAccount,Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.branch = branch;
        this.userAccount = userAccount;
        this.business = business;
        
        txtCheckingBalance.setEnabled(false);
        txtSavingsBalance.setEnabled(false);
        txtUnutilized.setEnabled(false);

        
        lblAmount.setVisible(false);
        lblFrom.setVisible(false);
        lblTo.setVisible(false);
        lblPayeeName.setVisible(false);
        comboFrom.setVisible(false);
        comboTo.setVisible(false);
        txtPayeeName.setVisible(false);
        txtAmount.setVisible(false);
        btnAddPayeeToMyPayeeList.setVisible(false);
        btnTransfer.setVisible(false);
        
        // From Customer Accounts
        fromCustomer = (Customer)userAccount.getPerson();   
        accountList = fromCustomer.getAccountDirectory().getAccountList();
              
        populateAccountBalances();
        
    }
    
    private void populateAccountBalances()
    {
        txtUnutilized.setText(String.valueOf(fromCustomer.getMaxLoanAmountBalanceAvailable()));
        
        accountList = fromCustomer.getAccountDirectory().getAccountList();
        for(Account a : accountList)
        {
            if(a.getAccountName().equals(Account.AccountType.CheckingAccount.getValue()))
            {
                txtCheckingBalance.setText(String.valueOf(a.getAccountBalance()));
            }
            else if(a.getAccountName().equals(Account.AccountType.SavingsAccount.getValue()))
            {
               txtSavingsBalance.setText(String.valueOf(a.getAccountBalance())); 
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAddPayee = new javax.swing.JButton();
        txtSavingsBalance = new javax.swing.JTextField();
        txtCheckingBalance = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtUnutilized = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnBetweenMyAccounts = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        btnMoneyToPayee = new javax.swing.JButton();
        lblFrom = new javax.swing.JLabel();
        lblTo = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        btnTransfer = new javax.swing.JButton();
        comboFrom = new javax.swing.JComboBox();
        txtAmount = new javax.swing.JTextField();
        lblPayeeName = new javax.swing.JLabel();
        txtPayeeName = new javax.swing.JTextField();
        btnAddPayeeToMyPayeeList = new javax.swing.JButton();
        comboTo = new javax.swing.JComboBox();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Online Credit / Debit");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAddPayee.setText("Add Payee ");
        btnAddPayee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPayeeActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Account Details");

        jLabel17.setText("Eligible Loan Amount Balance");

        jLabel8.setText("Checking Account Balance");

        jLabel13.setText("Savings Account Balance");

        btnBetweenMyAccounts.setText("Between My Accounts");
        btnBetweenMyAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBetweenMyAccountsActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Amount Transfer");

        btnMoneyToPayee.setText("Send Money To Payee");
        btnMoneyToPayee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoneyToPayeeActionPerformed(evt);
            }
        });

        lblFrom.setText("From Account   ");

        lblTo.setText("To Account");

        lblAmount.setText("Amount ");

        btnTransfer.setText("Transfer");
        btnTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferActionPerformed(evt);
            }
        });

        comboFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblPayeeName.setText("Payee Name");

        btnAddPayeeToMyPayeeList.setText("Add Payee To My Payee List");
        btnAddPayeeToMyPayeeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPayeeToMyPayeeListActionPerformed(evt);
            }
        });

        comboTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnAddPayee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnBetweenMyAccounts, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                        .addComponent(btnMoneyToPayee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(btnBack)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(btnAddPayeeToMyPayeeList))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPayeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPayeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(comboFrom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                            .addComponent(comboTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addComponent(btnTransfer))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSavingsBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCheckingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUnutilized, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(34, 34, 34))
                            .addComponent(jLabel13))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCheckingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
                            .addComponent(txtSavingsBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUnutilized, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))))
                .addGap(30, 30, 30)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBetweenMyAccounts)
                        .addGap(18, 18, 18)
                        .addComponent(btnMoneyToPayee)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddPayee)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPayeeName)
                            .addComponent(txtPayeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(btnAddPayeeToMyPayeeList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFrom)
                            .addComponent(comboFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTo)
                            .addComponent(comboTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAmount))
                        .addGap(18, 18, 18)
                        .addComponent(btnTransfer)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnMoneyToPayeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoneyToPayeeActionPerformed
        lblFrom.setVisible(true);
        lblTo.setVisible(true);
        lblTo.setText("Pay To");
        comboFrom.setVisible(true);
        comboTo.setVisible(true);
        lblAmount.setVisible(true);
        txtAmount.setVisible(true);
        btnTransfer.setVisible(true);
        lblPayeeName.setVisible(false);
        txtPayeeName.setVisible(false);
        btnAddPayeeToMyPayeeList.setVisible(false);
        txtAmount.setText("");
        
        comboFrom.removeAllItems();
        for(Account a: accountList )
        {
            comboFrom.addItem(a);
        }
        
        comboTo.removeAllItems();
        for(Customer c: fromCustomer.getPayeeList().getCustomerList())
        {
            comboTo.addItem(c);
        }
        
    }//GEN-LAST:event_btnMoneyToPayeeActionPerformed

    private void btnTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferActionPerformed
       
        Double amount;
        
        if (txtAmount.getText().trim().equals(""))
        {
           JOptionPane.showMessageDialog(null,"Amount is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }
          
        try
        {
           amount = Double.parseDouble(txtAmount.getText().trim());
        }
        catch(NumberFormatException e)
        {
           JOptionPane.showMessageDialog(null,"Amount can only be a numeric value.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
        }   
        
        Account from = (Account)comboFrom.getSelectedItem();
        Double balance = from.getAccountBalance();
        
        if(amount>balance)
        {
          JOptionPane.showMessageDialog(null,"Insufficient Balance","WARNING",JOptionPane.WARNING_MESSAGE);
           return;  
        }
        
	// BETWEEN MY ACCOUNTS
        if(isBetweenMyAccounts==true)
        {
            Account fromAccount = (Account)comboFrom.getSelectedItem();
            Account toAccount = (Account)comboTo.getSelectedItem();
            
            if(fromAccount==toAccount)
            {
                JOptionPane.showMessageDialog(null,"From Account and To Account cannot be same.","WARNING",JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            Double oldAccountBalance;
            //To debit the amount from FromAccount
               for(Account a : accountList)
               {
                   if(a==fromAccount)
                   {
                       oldAccountBalance= fromAccount.getAccountBalance();
                       a.setAccountBalance(oldAccountBalance - amount);
                   }
               }
             //To credit the amount to ToAccount
               for(Account a : accountList)
               {
                   if(a==toAccount)
                   {
                       oldAccountBalance= toAccount.getAccountBalance();
                       a.setAccountBalance(oldAccountBalance + amount);
                   }
               }
        
        }
        
        //TO PAYEE
        else if (isBetweenMyAccounts==false)
        {
            Account fromAccount = (Account)comboFrom.getSelectedItem();
            
            Double oldAccountBalance;
            //To debit the amount from FromAccount
               for(Account a : accountList)
               {
                   if(a==fromAccount)
                   {
                       oldAccountBalance= fromAccount.getAccountBalance();
                       a.setAccountBalance(oldAccountBalance - amount);
                   }
               }
               
             //To credit the amount to To Payee(Checking Account)
             Customer payeeCustomer = (Customer) comboTo.getSelectedItem();
             ArrayList<Account> payeeAccountList = payeeCustomer.getAccountDirectory().getAccountList();
             for(Account a : payeeAccountList)
               {
                   if(a.getAccountName().equals(Account.AccountType.CheckingAccount.getValue()))
                   {
                       oldAccountBalance= a.getAccountBalance();
                       a.setAccountBalance(oldAccountBalance + amount);
                   }
               }        
             
        }
        
        JOptionPane.showMessageDialog(null, "Amount Transfer is successful.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
        
        isBetweenMyAccounts = false;
        lblFrom.setVisible(false);
        lblTo.setVisible(false);
        comboFrom.setVisible(false);
        comboTo.setVisible(false);
        lblAmount.setVisible(false);
        txtAmount.setVisible(false);
        btnTransfer.setVisible(false);
        populateAccountBalances();
        
    }//GEN-LAST:event_btnTransferActionPerformed

    private void btnAddPayeeToMyPayeeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPayeeToMyPayeeListActionPerformed
     
       
       String name = txtPayeeName.getText().trim();
       
       if(name.equals(""))
       {
           JOptionPane.showMessageDialog(null, "Payee name is mandatory.","WARNING",JOptionPane.WARNING_MESSAGE);
           return;
       }
       Boolean isThere=false;
       for(Region r: business.getRegionDirectory().getRegionList())
       {
           for(Branch b: r.getBranchDirectory().getBranchList() )
           {
               for(Customer c: b.getCustomerDirectory().getCustomerList())
               {
                 if(name.equalsIgnoreCase(c.toString()))  
                 {
                     isThere =true;
                     fromCustomer.getPayeeList().addCustomer(c);
                 }
               }
           }
       }
       if(isThere==false)
       {
          JOptionPane.showMessageDialog(null, "Customer with the given name doesn't exist in the bank.","WARNING",JOptionPane.WARNING_MESSAGE);
          return; 
       }
 
       JOptionPane.showMessageDialog(null, "Payee is added successfully to your Payee List.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
       
       lblPayeeName.setVisible(false);
       txtPayeeName.setVisible(false);
       btnAddPayeeToMyPayeeList.setVisible(false);
       
       
    }//GEN-LAST:event_btnAddPayeeToMyPayeeListActionPerformed

    private void btnBetweenMyAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBetweenMyAccountsActionPerformed

        isBetweenMyAccounts = true;
        lblFrom.setVisible(true);
        lblTo.setVisible(true);
        lblTo.setText("To Account");
        comboFrom.setVisible(true);
        comboTo.setVisible(true);
        lblAmount.setVisible(true);
        txtAmount.setVisible(true);
        btnTransfer.setVisible(true);
        lblPayeeName.setVisible(false);
        txtPayeeName.setVisible(false);
        btnAddPayeeToMyPayeeList.setVisible(false);
        txtAmount.setText("");
        comboFrom.removeAllItems();
        comboTo.removeAllItems();
        for(Account a: accountList )
        {
            comboFrom.addItem(a);
            comboTo.addItem(a);
        }
       
        
    }//GEN-LAST:event_btnBetweenMyAccountsActionPerformed

    private void btnAddPayeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPayeeActionPerformed
       lblPayeeName.setVisible(true);
       txtPayeeName.setVisible(true);
       btnAddPayeeToMyPayeeList.setVisible(true);
       
        lblFrom.setVisible(false);
        lblTo.setVisible(false);
        comboFrom.setVisible(false);
        comboTo.setVisible(false);
        lblAmount.setVisible(false);
        txtAmount.setVisible(false);
        btnTransfer.setVisible(false);
       
    }//GEN-LAST:event_btnAddPayeeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPayee;
    private javax.swing.JButton btnAddPayeeToMyPayeeList;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBetweenMyAccounts;
    private javax.swing.JButton btnMoneyToPayee;
    private javax.swing.JButton btnTransfer;
    private javax.swing.JComboBox comboFrom;
    private javax.swing.JComboBox comboTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblPayeeName;
    private javax.swing.JLabel lblTo;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCheckingBalance;
    private javax.swing.JTextField txtPayeeName;
    private javax.swing.JTextField txtSavingsBalance;
    private javax.swing.JTextField txtUnutilized;
    // End of variables declaration//GEN-END:variables
}
